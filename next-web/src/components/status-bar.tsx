/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/rVNMXFBdY5w
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

import { useMemo } from "react";
import MyBettinglist from "./my-list";
import { GameState } from "@/types/games";
import { GAME_ENDED, GAME_IN_PROGRES } from "@/utils/val/time_val";

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/

type StatusBarProps = {
  title: string;
  status: GameState;
  now_time: number;
};

export function StatusBar({ title, status, now_time }: StatusBarProps) {
  const statusTime = useMemo(() => {
    return status === "게임 시작" ? GAME_IN_PROGRES : GAME_ENDED;
  }, [status]);

  const statusColor = useMemo(() => {
    if (status === "게임 종료") {
      return "text-red-600 bg-red-100 dark:bg-red-900 dark:text-red-300";
    } else if (status === "게임 시작") {
      return "text-green-600 bg-green-100 dark:bg-green-900 dark:text-green-300";
    }

    return "text-yellow-600 bg-yellow-100 dark:bg-yellow-900 dark:text-yellow-300";
  }, [status]);

  const barColor = useMemo(() => {
    if (status === "게임 종료") {
      return " bg-red-500 ";
    } else if (status === "게임 시작") {
      return " bg-green-500 ";
    } else {
      return " bg-yellow-500 ";
    }
  }, [status]);

  const ment = useMemo(() => {
    return status === "게임 시작" ? "게임이 종료됩니다." : "게임이 시작됩니다.";
  }, [status]);

  return (
    <div className="w-full p-4 bg-white rounded-lg shadow-md dark:bg-gray-950">
      <div className="flex items-center justify-between">
        <div className="text-lg font-semibold">{title}</div>
        <div
          className={
            "px-2 py-1 text-xs font-medium rounded-full " + statusColor
          }
        >
          {status}
        </div>
      </div>
      <div className="w-full h-2 mt-2 bg-gray-200 rounded-full dark:bg-gray-800">
        <div
          className={"h-2 " + barColor + " rounded-full"}
          style={{
            width: `calc((${now_time} / ${statusTime}) * 100%)`,
            transition: "ease 1s",
          }}
        />
      </div>
      <div className="mt-2 text-sm text-gray-500 dark:text-gray-400">
        {statusTime - now_time}초 후에 {ment}
      </div>
      {/* <MyBettinglist /> */}
    </div>
  );
}
